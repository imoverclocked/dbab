name: release (linux)

on:
  release:
    types:
      - created
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          # - arch: amd64
          #   cc:   gcc
          # - arch: arm64
          #   cc:   aarch64-linux-gnu-gcc
          - pkg: apk
            push: alpine
          - pkg: deb
            push: deb
          - pkg: rpm
            push: rpm

    env:
      PKG: ${{ matrix.pkg }}
      CSPUSH: ${{ matrix.push }}

      # GOOS:   linux
      # GOARCH: ${{ matrix.arch }}
      # CC:     ${{ matrix.cc }}

    steps:
      - name: Install nfpm
        working-directory: /
        run: |
          curl -sfL https://git.io/JDkED | sudo sh
          ls -l /bin/nfpm

      - name: Install Cloudsmith CLI
        run: pip install --upgrade cloudsmith-cli
        # Cloudsmith CLI tooling for pushing releases
        # See https://help.cloudsmith.io/docs/cli

      - id: release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set release
        run: |
          echo "RELEASE_VERSION=${{ steps.release.outputs.tag_name }}" >> $GITHUB_ENV
          echo msg: ${{ steps.release.outputs.name }}

      - uses: actions/checkout@v2

      - name: Build
        run: |
          rm -rf dist
          mkdir -p dist
          echo "RELEASE_VERSION=${RELEASE_VERSION}"
          env | grep RELEASE_VERSION=
          nfpm pkg --config .github/dbab.yaml --packager ${{ env.PKG }} --target dist

      # Publish to cloudsmith to repo
      - name: Publish package to cloudsmith
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        run: |
          for filename in dist/*; do
            echo "Pushing '$filename' to cloudsmith repo"
            cloudsmith push ${{ env.CSPUSH }} suntong/repo/any-distro/any-version $filename
          done

      - name: Upload release package
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.release.outputs.name }}
          files: ./dist/dbab*
          generate_release_notes: true
